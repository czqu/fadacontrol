// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: rmtt_data_msg.proto

package rmtt_msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RmttMsgType int32

const (
	RmttMsgType_UnknownRmttMsgType   RmttMsgType = 0
	RmttMsgType_RfuResponseMsgType   RmttMsgType = 1
	RmttMsgType_UnlockPcMsgType      RmttMsgType = 2
	RmttMsgType_LockScreenMsgType    RmttMsgType = 3
	RmttMsgType_ShutdownMsgType      RmttMsgType = 4
	RmttMsgType_StandbyMsgType       RmttMsgType = 5
	RmttMsgType_PowerOnMsgType       RmttMsgType = 6
	RmttMsgType_CustomCommandMsgType RmttMsgType = 7
	RmttMsgType_PingMsgType          RmttMsgType = 8
	RmttMsgType_PongMsgType          RmttMsgType = 9
)

// Enum value maps for RmttMsgType.
var (
	RmttMsgType_name = map[int32]string{
		0: "UnknownRmttMsgType",
		1: "RfuResponseMsgType",
		2: "UnlockPcMsgType",
		3: "LockScreenMsgType",
		4: "ShutdownMsgType",
		5: "StandbyMsgType",
		6: "PowerOnMsgType",
		7: "CustomCommandMsgType",
		8: "PingMsgType",
		9: "PongMsgType",
	}
	RmttMsgType_value = map[string]int32{
		"UnknownRmttMsgType":   0,
		"RfuResponseMsgType":   1,
		"UnlockPcMsgType":      2,
		"LockScreenMsgType":    3,
		"ShutdownMsgType":      4,
		"StandbyMsgType":       5,
		"PowerOnMsgType":       6,
		"CustomCommandMsgType": 7,
		"PingMsgType":          8,
		"PongMsgType":          9,
	}
)

func (x RmttMsgType) Enum() *RmttMsgType {
	p := new(RmttMsgType)
	*p = x
	return p
}

func (x RmttMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RmttMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtt_data_msg_proto_enumTypes[0].Descriptor()
}

func (RmttMsgType) Type() protoreflect.EnumType {
	return &file_rmtt_data_msg_proto_enumTypes[0]
}

func (x RmttMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RmttMsgType.Descriptor instead.
func (RmttMsgType) EnumDescriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{0}
}

type EncryptionAlgorithmEnum int32

const (
	EncryptionAlgorithmEnum_NoEncryption              EncryptionAlgorithmEnum = 0
	EncryptionAlgorithmEnum_AESGCM128Algorithm        EncryptionAlgorithmEnum = 1 // The AES-128GCM key is 16 bytes long
	EncryptionAlgorithmEnum_AESGCM192Algorithm        EncryptionAlgorithmEnum = 2 // The AES-192GCM key is 24 bytes long
	EncryptionAlgorithmEnum_AESGCM256Algorithm        EncryptionAlgorithmEnum = 3 // The AES-256GCM key is 32 bytes long
	EncryptionAlgorithmEnum_ChaCha20Poly1305Algorithm EncryptionAlgorithmEnum = 4
)

// Enum value maps for EncryptionAlgorithmEnum.
var (
	EncryptionAlgorithmEnum_name = map[int32]string{
		0: "NoEncryption",
		1: "AESGCM128Algorithm",
		2: "AESGCM192Algorithm",
		3: "AESGCM256Algorithm",
		4: "ChaCha20Poly1305Algorithm",
	}
	EncryptionAlgorithmEnum_value = map[string]int32{
		"NoEncryption":              0,
		"AESGCM128Algorithm":        1,
		"AESGCM192Algorithm":        2,
		"AESGCM256Algorithm":        3,
		"ChaCha20Poly1305Algorithm": 4,
	}
)

func (x EncryptionAlgorithmEnum) Enum() *EncryptionAlgorithmEnum {
	p := new(EncryptionAlgorithmEnum)
	*p = x
	return p
}

func (x EncryptionAlgorithmEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgorithmEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtt_data_msg_proto_enumTypes[1].Descriptor()
}

func (EncryptionAlgorithmEnum) Type() protoreflect.EnumType {
	return &file_rmtt_data_msg_proto_enumTypes[1]
}

func (x EncryptionAlgorithmEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionAlgorithmEnum.Descriptor instead.
func (EncryptionAlgorithmEnum) EnumDescriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{1}
}

type ShutdownType int32

const (
	ShutdownType_E_UNKNOWN ShutdownType = 0
	// E=>通用
	ShutdownType_E_LOGOFF         ShutdownType = 1 // 注销当前用户
	ShutdownType_E_FORCE_SHUTDOWN ShutdownType = 2 // 强制关闭所有应用程序并关机 在Windows上即 (EWX_SHUTDOWN | EWX_FORCE)
	ShutdownType_E_FORCE_REBOOT   ShutdownType = 3 // 强制关闭所有应用程序并重启 在Windows上即(EWX_REBOOT | EWX_FORCE)
	// EWX => Windows 专有
	ShutdownType_EWX_SHUTDOWN                          ShutdownType = 4  // 关机但不关闭电源
	ShutdownType_EWX_REBOOT                            ShutdownType = 5  // 重启计算机
	ShutdownType_EWX_POWEROFF                          ShutdownType = 6  // 关机并关闭电源
	ShutdownType_EWX_HYBRID_SHUTDOWN                   ShutdownType = 7  // 混合关机
	ShutdownType_EWX_FORCE_POWEROFF                    ShutdownType = 8  // 强制关闭所有应用程序并关机同时关闭电源 (EWX_POWEROFF | EWX_FORCE)
	ShutdownType_EWX_REBOOT_RESTARTAPPS                ShutdownType = 9  // 重启计算机并重启应用程序 (EWX_REBOOT | EWX_RESTARTAPPS)
	ShutdownType_EWX_FORCE_REBOOT_RESTARTAPPS          ShutdownType = 10 // 强制关闭应用程序后重启并重启应用程序 (EWX_REBOOT | EWX_FORCE | EWX_RESTARTAPPS)
	ShutdownType_EWX_SHUTDOWN_RESTARTAPPS              ShutdownType = 11 // 关机但不关闭电源，关机后重启应用程序 (EWX_SHUTDOWN | EWX_RESTARTAPPS)
	ShutdownType_EWX_HYBRID_SHUTDOWN_FORCE             ShutdownType = 12 // 混合关机并强制关闭应用程序 (EWX_HYBRID_SHUTDOWN | EWX_FORCE)
	ShutdownType_EWX_HYBRID_SHUTDOWN_RESTARTAPPS       ShutdownType = 13 // 混合关机并重启应用程序 (EWX_HYBRID_SHUTDOWN | EWX_RESTARTAPPS)
	ShutdownType_EWX_HYBRID_SHUTDOWN_FORCE_RESTARTAPPS ShutdownType = 14 // 混合关机、强制关闭应用程序并重启应用程序 (EWX_HYBRID_SHUTDOWN | EWX_FORCE | EWX_RESTARTAPPS
)

// Enum value maps for ShutdownType.
var (
	ShutdownType_name = map[int32]string{
		0:  "E_UNKNOWN",
		1:  "E_LOGOFF",
		2:  "E_FORCE_SHUTDOWN",
		3:  "E_FORCE_REBOOT",
		4:  "EWX_SHUTDOWN",
		5:  "EWX_REBOOT",
		6:  "EWX_POWEROFF",
		7:  "EWX_HYBRID_SHUTDOWN",
		8:  "EWX_FORCE_POWEROFF",
		9:  "EWX_REBOOT_RESTARTAPPS",
		10: "EWX_FORCE_REBOOT_RESTARTAPPS",
		11: "EWX_SHUTDOWN_RESTARTAPPS",
		12: "EWX_HYBRID_SHUTDOWN_FORCE",
		13: "EWX_HYBRID_SHUTDOWN_RESTARTAPPS",
		14: "EWX_HYBRID_SHUTDOWN_FORCE_RESTARTAPPS",
	}
	ShutdownType_value = map[string]int32{
		"E_UNKNOWN":                             0,
		"E_LOGOFF":                              1,
		"E_FORCE_SHUTDOWN":                      2,
		"E_FORCE_REBOOT":                        3,
		"EWX_SHUTDOWN":                          4,
		"EWX_REBOOT":                            5,
		"EWX_POWEROFF":                          6,
		"EWX_HYBRID_SHUTDOWN":                   7,
		"EWX_FORCE_POWEROFF":                    8,
		"EWX_REBOOT_RESTARTAPPS":                9,
		"EWX_FORCE_REBOOT_RESTARTAPPS":          10,
		"EWX_SHUTDOWN_RESTARTAPPS":              11,
		"EWX_HYBRID_SHUTDOWN_FORCE":             12,
		"EWX_HYBRID_SHUTDOWN_RESTARTAPPS":       13,
		"EWX_HYBRID_SHUTDOWN_FORCE_RESTARTAPPS": 14,
	}
)

func (x ShutdownType) Enum() *ShutdownType {
	p := new(ShutdownType)
	*p = x
	return p
}

func (x ShutdownType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShutdownType) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtt_data_msg_proto_enumTypes[2].Descriptor()
}

func (ShutdownType) Type() protoreflect.EnumType {
	return &file_rmtt_data_msg_proto_enumTypes[2]
}

func (x ShutdownType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShutdownType.Descriptor instead.
func (ShutdownType) EnumDescriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{2}
}

type SignatureMethod int32

const (
	SignatureMethod_NoSignature SignatureMethod = 0
	SignatureMethod_HmacSHA256  SignatureMethod = 1
	SignatureMethod_HmacSHA1    SignatureMethod = 2
	SignatureMethod_HmacMD5     SignatureMethod = 3
	SignatureMethod_HmacSHA512  SignatureMethod = 4
)

// Enum value maps for SignatureMethod.
var (
	SignatureMethod_name = map[int32]string{
		0: "NoSignature",
		1: "HmacSHA256",
		2: "HmacSHA1",
		3: "HmacMD5",
		4: "HmacSHA512",
	}
	SignatureMethod_value = map[string]int32{
		"NoSignature": 0,
		"HmacSHA256":  1,
		"HmacSHA1":    2,
		"HmacMD5":     3,
		"HmacSHA512":  4,
	}
)

func (x SignatureMethod) Enum() *SignatureMethod {
	p := new(SignatureMethod)
	*p = x
	return p
}

func (x SignatureMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_rmtt_data_msg_proto_enumTypes[3].Descriptor()
}

func (SignatureMethod) Type() protoreflect.EnumType {
	return &file_rmtt_data_msg_proto_enumTypes[3]
}

func (x SignatureMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureMethod.Descriptor instead.
func (SignatureMethod) EnumDescriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{3}
}

type RmttMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaData      *MetaData              `protobuf:"bytes,1,opt,name=metaData,proto3" json:"metaData,omitempty"`
	Data          *anypb.Any             `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RmttMsg) Reset() {
	*x = RmttMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RmttMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmttMsg) ProtoMessage() {}

func (x *RmttMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmttMsg.ProtoReflect.Descriptor instead.
func (*RmttMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{0}
}

func (x *RmttMsg) GetMetaData() *MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *RmttMsg) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// 用于给电脑端和电脑端响应的签名 仅电脑端验证和生成 服务端不验证
type MetaData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MsgType         RmttMsgType            `protobuf:"varint,1,opt,name=msgType,proto3,enum=net.czqu.rmtt_msg.RmttMsgType" json:"msgType,omitempty"` //主要目的为了参与签名
	Nonce           string                 `protobuf:"bytes,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`                                         //随机数
	Timestamp       int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                //毫秒
	Key             string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`                                             //签名key  作为返回结果的时候为空 则电脑端在签名的时候会忽略此字段
	SignatureMethod SignatureMethod        `protobuf:"varint,5,opt,name=signatureMethod,proto3,enum=net.czqu.rmtt_msg.SignatureMethod" json:"signatureMethod,omitempty"`
	BigDataMd5      string                 `protobuf:"bytes,6,opt,name=bigDataMd5,proto3" json:"bigDataMd5,omitempty"` // bigData 部分的字节数组的MD5 ， 只有bigData的字段有数据才有此签名
	Signature       string                 `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`   // 签名，用于请求电脑端或者响应电脑端， 签名字段按顺序，  字段之间使用\n间隔 最后一段不加\n 空的内容不加，最后一部分是
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	mi := &file_rmtt_data_msg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MetaData) GetMsgType() RmttMsgType {
	if x != nil {
		return x.MsgType
	}
	return RmttMsgType_UnknownRmttMsgType
}

func (x *MetaData) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *MetaData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetaData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetaData) GetSignatureMethod() SignatureMethod {
	if x != nil {
		return x.SignatureMethod
	}
	return SignatureMethod_NoSignature
}

func (x *MetaData) GetBigDataMd5() string {
	if x != nil {
		return x.BigDataMd5
	}
	return ""
}

func (x *MetaData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// 例如 LoginToPCMsg 部分签名为 Nonce\nString(timestamp)\nString(int(signatureMethod))\nString(msgType)\nBase64(username)\nBase64(password)\nString(int(encryptionSignatureMethod))
type LoginToPCRequestMsg struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	Username         []byte                  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 源字符串使用utf-8转为字节数组后加密形成的最终数组  为了兼容json形式的数据 因此此处签名用的是base64后的字符串参与签名，  即转换成base64后换行放在bigDataMd5后
	Password         []byte                  `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 源字符串使用utf-8转为字节数组后加密形成的最终数组  为了兼容json形式的数据 因此此处签名用的是base64后的字符串参与签名，
	EncryptionMethod EncryptionAlgorithmEnum `protobuf:"varint,3,opt,name=encryptionMethod,proto3,enum=net.czqu.rmtt_msg.EncryptionAlgorithmEnum" json:"encryptionMethod,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LoginToPCRequestMsg) Reset() {
	*x = LoginToPCRequestMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginToPCRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginToPCRequestMsg) ProtoMessage() {}

func (x *LoginToPCRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginToPCRequestMsg.ProtoReflect.Descriptor instead.
func (*LoginToPCRequestMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{2}
}

func (x *LoginToPCRequestMsg) GetUsername() []byte {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *LoginToPCRequestMsg) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *LoginToPCRequestMsg) GetEncryptionMethod() EncryptionAlgorithmEnum {
	if x != nil {
		return x.EncryptionMethod
	}
	return EncryptionAlgorithmEnum_NoEncryption
}

type PowerOnRequestMsg struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	MacAddress       []byte                  `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"` // 源字符串使用utf-8转为字节数组后加密形成的最终数组  为了兼容json形式的数据 因此此处签名用的是base64后的字符串参与签名，  即转换成base64后换行放在bigDataMd5后
	EncryptionMethod EncryptionAlgorithmEnum `protobuf:"varint,2,opt,name=encryptionMethod,proto3,enum=net.czqu.rmtt_msg.EncryptionAlgorithmEnum" json:"encryptionMethod,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PowerOnRequestMsg) Reset() {
	*x = PowerOnRequestMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnRequestMsg) ProtoMessage() {}

func (x *PowerOnRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOnRequestMsg.ProtoReflect.Descriptor instead.
func (*PowerOnRequestMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{3}
}

func (x *PowerOnRequestMsg) GetMacAddress() []byte {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *PowerOnRequestMsg) GetEncryptionMethod() EncryptionAlgorithmEnum {
	if x != nil {
		return x.EncryptionMethod
	}
	return EncryptionAlgorithmEnum_NoEncryption
}

type ShutdownRequestMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShutdownType  ShutdownType           `protobuf:"varint,1,opt,name=shutdownType,proto3,enum=net.czqu.rmtt_msg.ShutdownType" json:"shutdownType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownRequestMsg) Reset() {
	*x = ShutdownRequestMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequestMsg) ProtoMessage() {}

func (x *ShutdownRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequestMsg.ProtoReflect.Descriptor instead.
func (*ShutdownRequestMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{4}
}

func (x *ShutdownRequestMsg) GetShutdownType() ShutdownType {
	if x != nil {
		return x.ShutdownType
	}
	return ShutdownType_E_UNKNOWN
}

type LockScreenRequestMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockScreenRequestMsg) Reset() {
	*x = LockScreenRequestMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockScreenRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockScreenRequestMsg) ProtoMessage() {}

func (x *LockScreenRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockScreenRequestMsg.ProtoReflect.Descriptor instead.
func (*LockScreenRequestMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{5}
}

type StandbyRequestMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StandbyRequestMsg) Reset() {
	*x = StandbyRequestMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StandbyRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandbyRequestMsg) ProtoMessage() {}

func (x *StandbyRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandbyRequestMsg.ProtoReflect.Descriptor instead.
func (*StandbyRequestMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{6}
}

type PingMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingMsg) Reset() {
	*x = PingMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMsg) ProtoMessage() {}

func (x *PingMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMsg.ProtoReflect.Descriptor instead.
func (*PingMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{7}
}

type PongMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongMsg) Reset() {
	*x = PongMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMsg) ProtoMessage() {}

func (x *PongMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMsg.ProtoReflect.Descriptor instead.
func (*PongMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{8}
}

type RmttResponseMsg struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	MetaData             *MetaData               `protobuf:"bytes,1,opt,name=metaData,proto3" json:"metaData,omitempty"`
	RequestId            string                  `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Code                 int32                   `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string                  `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	BigData              []byte                  `protobuf:"bytes,5,opt,name=bigData,proto3" json:"bigData,omitempty"`                                                                           //一般为返回的文件数据,日志数据之类的二进制数据
	DataEncryptionMethod EncryptionAlgorithmEnum `protobuf:"varint,6,opt,name=dataEncryptionMethod,proto3,enum=net.czqu.rmtt_msg.EncryptionAlgorithmEnum" json:"dataEncryptionMethod,omitempty"` //转成数字后再转成字符串签名
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RmttResponseMsg) Reset() {
	*x = RmttResponseMsg{}
	mi := &file_rmtt_data_msg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RmttResponseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmttResponseMsg) ProtoMessage() {}

func (x *RmttResponseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rmtt_data_msg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmttResponseMsg.ProtoReflect.Descriptor instead.
func (*RmttResponseMsg) Descriptor() ([]byte, []int) {
	return file_rmtt_data_msg_proto_rawDescGZIP(), []int{9}
}

func (x *RmttResponseMsg) GetMetaData() *MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *RmttResponseMsg) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RmttResponseMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RmttResponseMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RmttResponseMsg) GetBigData() []byte {
	if x != nil {
		return x.BigData
	}
	return nil
}

func (x *RmttResponseMsg) GetDataEncryptionMethod() EncryptionAlgorithmEnum {
	if x != nil {
		return x.DataEncryptionMethod
	}
	return EncryptionAlgorithmEnum_NoEncryption
}

var File_rmtt_data_msg_proto protoreflect.FileDescriptor

var file_rmtt_data_msg_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x6d, 0x74, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x73, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e,
	0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x07, 0x52, 0x6d, 0x74, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x37,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e, 0x72, 0x6d, 0x74, 0x74,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x96, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e, 0x72, 0x6d, 0x74, 0x74, 0x5f,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6d, 0x74, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4c,
	0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a,
	0x71, 0x75, 0x2e, 0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e,
	0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e, 0x72, 0x6d,
	0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x59, 0x0a, 0x12, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e, 0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73,
	0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4c,
	0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x09, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x73, 0x67, 0x22, 0x09, 0x0a, 0x07, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x22, 0x88,
	0x02, 0x0a, 0x0f, 0x52, 0x6d, 0x74, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a, 0x71, 0x75, 0x2e,
	0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x62, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x14, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x7a,
	0x71, 0x75, 0x2e, 0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2a, 0xe2, 0x01, 0x0a, 0x0b, 0x52, 0x6d,
	0x74, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x6d, 0x74, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x66, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x63, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x62, 0x79, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x08, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x09, 0x2a, 0x92,
	0x01, 0x0a, 0x17, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x45, 0x53, 0x47, 0x43, 0x4d, 0x31, 0x32, 0x38, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x45, 0x53, 0x47, 0x43, 0x4d, 0x31, 0x39,
	0x32, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x45, 0x53, 0x47, 0x43, 0x4d, 0x32, 0x35, 0x36, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x43, 0x68, 0x61, 0x32, 0x30,
	0x50, 0x6f, 0x6c, 0x79, 0x31, 0x33, 0x30, 0x35, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x10, 0x04, 0x2a, 0x85, 0x03, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x46, 0x46, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x48, 0x55,
	0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x5f, 0x46, 0x4f, 0x52,
	0x43, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x57, 0x58, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x45, 0x57, 0x58, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x57, 0x58, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4f, 0x46, 0x46, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x57, 0x58, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x5f, 0x53, 0x48,
	0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x57, 0x58, 0x5f,
	0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4f, 0x46, 0x46, 0x10, 0x08,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x57, 0x58, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x52,
	0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x50, 0x50, 0x53, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c,
	0x45, 0x57, 0x58, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x50, 0x50, 0x53, 0x10, 0x0a, 0x12, 0x1c,
	0x0a, 0x18, 0x45, 0x57, 0x58, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x52,
	0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x50, 0x50, 0x53, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19,
	0x45, 0x57, 0x58, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x0c, 0x12, 0x23, 0x0a, 0x1f, 0x45,
	0x57, 0x58, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f,
	0x57, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x50, 0x50, 0x53, 0x10, 0x0d,
	0x12, 0x29, 0x0a, 0x25, 0x45, 0x57, 0x58, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x5f, 0x53,
	0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x50, 0x50, 0x53, 0x10, 0x0e, 0x2a, 0x5d, 0x0a, 0x0f, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0f,
	0x0a, 0x0b, 0x4e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x48, 0x6d, 0x61, 0x63, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x48, 0x6d, 0x61, 0x63, 0x53, 0x48, 0x41, 0x31, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x48, 0x6d, 0x61, 0x63, 0x4d, 0x44, 0x35, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x6d,
	0x61, 0x63, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0x04, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b,
	0x72, 0x6d, 0x74, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rmtt_data_msg_proto_rawDescOnce sync.Once
	file_rmtt_data_msg_proto_rawDescData = file_rmtt_data_msg_proto_rawDesc
)

func file_rmtt_data_msg_proto_rawDescGZIP() []byte {
	file_rmtt_data_msg_proto_rawDescOnce.Do(func() {
		file_rmtt_data_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_rmtt_data_msg_proto_rawDescData)
	})
	return file_rmtt_data_msg_proto_rawDescData
}

var file_rmtt_data_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_rmtt_data_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rmtt_data_msg_proto_goTypes = []any{
	(RmttMsgType)(0),             // 0: net.czqu.rmtt_msg.RmttMsgType
	(EncryptionAlgorithmEnum)(0), // 1: net.czqu.rmtt_msg.EncryptionAlgorithmEnum
	(ShutdownType)(0),            // 2: net.czqu.rmtt_msg.ShutdownType
	(SignatureMethod)(0),         // 3: net.czqu.rmtt_msg.SignatureMethod
	(*RmttMsg)(nil),              // 4: net.czqu.rmtt_msg.RmttMsg
	(*MetaData)(nil),             // 5: net.czqu.rmtt_msg.MetaData
	(*LoginToPCRequestMsg)(nil),  // 6: net.czqu.rmtt_msg.LoginToPCRequestMsg
	(*PowerOnRequestMsg)(nil),    // 7: net.czqu.rmtt_msg.PowerOnRequestMsg
	(*ShutdownRequestMsg)(nil),   // 8: net.czqu.rmtt_msg.ShutdownRequestMsg
	(*LockScreenRequestMsg)(nil), // 9: net.czqu.rmtt_msg.LockScreenRequestMsg
	(*StandbyRequestMsg)(nil),    // 10: net.czqu.rmtt_msg.StandbyRequestMsg
	(*PingMsg)(nil),              // 11: net.czqu.rmtt_msg.PingMsg
	(*PongMsg)(nil),              // 12: net.czqu.rmtt_msg.PongMsg
	(*RmttResponseMsg)(nil),      // 13: net.czqu.rmtt_msg.RmttResponseMsg
	(*anypb.Any)(nil),            // 14: google.protobuf.Any
}
var file_rmtt_data_msg_proto_depIdxs = []int32{
	5,  // 0: net.czqu.rmtt_msg.RmttMsg.metaData:type_name -> net.czqu.rmtt_msg.MetaData
	14, // 1: net.czqu.rmtt_msg.RmttMsg.Data:type_name -> google.protobuf.Any
	0,  // 2: net.czqu.rmtt_msg.MetaData.msgType:type_name -> net.czqu.rmtt_msg.RmttMsgType
	3,  // 3: net.czqu.rmtt_msg.MetaData.signatureMethod:type_name -> net.czqu.rmtt_msg.SignatureMethod
	1,  // 4: net.czqu.rmtt_msg.LoginToPCRequestMsg.encryptionMethod:type_name -> net.czqu.rmtt_msg.EncryptionAlgorithmEnum
	1,  // 5: net.czqu.rmtt_msg.PowerOnRequestMsg.encryptionMethod:type_name -> net.czqu.rmtt_msg.EncryptionAlgorithmEnum
	2,  // 6: net.czqu.rmtt_msg.ShutdownRequestMsg.shutdownType:type_name -> net.czqu.rmtt_msg.ShutdownType
	5,  // 7: net.czqu.rmtt_msg.RmttResponseMsg.metaData:type_name -> net.czqu.rmtt_msg.MetaData
	1,  // 8: net.czqu.rmtt_msg.RmttResponseMsg.dataEncryptionMethod:type_name -> net.czqu.rmtt_msg.EncryptionAlgorithmEnum
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_rmtt_data_msg_proto_init() }
func file_rmtt_data_msg_proto_init() {
	if File_rmtt_data_msg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rmtt_data_msg_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rmtt_data_msg_proto_goTypes,
		DependencyIndexes: file_rmtt_data_msg_proto_depIdxs,
		EnumInfos:         file_rmtt_data_msg_proto_enumTypes,
		MessageInfos:      file_rmtt_data_msg_proto_msgTypes,
	}.Build()
	File_rmtt_data_msg_proto = out.File
	file_rmtt_data_msg_proto_rawDesc = nil
	file_rmtt_data_msg_proto_goTypes = nil
	file_rmtt_data_msg_proto_depIdxs = nil
}
